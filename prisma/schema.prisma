generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Article {
  id          String   @id @default(uuid())
  title       String
  description String
  language    String
  publishedOn DateTime
  publisherId String

  authors     ArticleAuthor[]
  descriptors ArticleDescriptor[]
  graphs      GraphArticle[]
  publisher   Publisher           @relation(fields: [publisherId], references: [id])

  @@map("articles")
}

model Author {
  id        String @id @default(uuid())
  firstName String
  lastName  String

  articles ArticleAuthor[]

  @@map("authors")
}

model Descriptor {
  id   String @id @default(uuid())
  name String

  articles ArticleDescriptor[]

  @@map("descriptors")
}

model Graph {
  id         String @id @default(uuid())
  subject    String
  providerId String

  provider Provider       @relation(fields: [providerId], references: [id])
  articles GraphArticle[]

  @@map("graphs")
}

model Provider {
  id   String @id @default(uuid())
  name String
  url  String
  logo String

  graphs Graph[]

  @@map("providers")
}

model Publisher {
  id   String @id @default(uuid())
  name String

  articles Article[]

  @@map("publishers")
}

model ArticleAuthor {
  id        String @id @default(uuid())
  articleId String
  authorId  String

  article Article @relation(fields: [articleId], references: [id])
  author  Author  @relation(fields: [authorId], references: [id])

  @@map("article_authors")
}

model ArticleDescriptor {
  id           String @id @default(uuid())
  articleId    String
  descriptorId String

  article    Article    @relation(fields: [articleId], references: [id])
  descriptor Descriptor @relation(fields: [descriptorId], references: [id])
}

model GraphArticle {
  id        String @id @default(uuid())
  graphId   String
  articleId String
  x         Float
  y         Float

  graph   Graph   @relation(fields: [graphId], references: [id])
  article Article @relation(fields: [articleId], references: [id])
}
